{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.notes, note => {\n    return _openBlock(), _createBlock($setup[\"NotesItem\"], {\n      key: note.id,\n      note: note\n    }, null, 8 /* PROPS */, [\"note\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$props","notes","note","_createBlock","$setup","key","id"],"sources":["/Users/boybutterfly1/Desktop/JS/notes_project/src/components/NotesList.vue"],"sourcesContent":["<script setup>\n  import NotesItem from '@/components/NotesItem.vue';\n  import { defineProps } from 'vue';\n  import { useNotesStore } from '@/store/index'\n  \n  const noteStore = useNotesStore();\n  \n  const props = defineProps({\n    notes: {\n      type: Array,\n      required: true\n    },\n  });\n</script>\n\n<template>\n    <div>\n        <notes-item\n            v-for=\"note in notes\"\n            :key=\"note.id\"\n            :note=\"note\"\n        />\n    </div>\n</template>\n\n<style scoped>\n\n</style>\n"],"mappings":";;uBAgBIA,mBAAA,CAMM,e,kBALFA,mBAAA,CAIEC,SAAA,QAAAC,WAAA,CAHiBC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBADfC,YAAA,CAIEC,MAAA;MAFGC,GAAG,EAAEH,IAAI,CAACI,EAAE;MACZJ,IAAI,EAAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}