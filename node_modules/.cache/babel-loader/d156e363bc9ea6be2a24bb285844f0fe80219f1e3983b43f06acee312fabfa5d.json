{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useNotesStore = defineStore('notesStore', {\n  state: () => ({\n    notes: [{\n      id: 1,\n      title: 'First note',\n      body: 'This is the first note',\n      date: '2021-01-01'\n    }],\n    sortOptions: [{\n      value: 'title',\n      text: 'Title'\n    }, {\n      value: 'body',\n      text: 'Content'\n    }, {\n      value: 'date',\n      text: 'Date'\n    }],\n    searchQuery: '',\n    selectedSort: ''\n  }),\n  getters: {\n    sortNotes() {\n      return [...this.notes].sort((n1, n2) => n1[this.selectedSort]?.localeCompare(n2[this.selectedSort]));\n    },\n    searchNotes() {\n      return sortNotes.filter(n => n.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || n.content.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  },\n  actions: {\n    addNote(note) {\n      this.notes.push(note);\n    },\n    deleteNote(note) {\n      this.notes = this.notes.filter(n => n.id !== note.id);\n    },\n    editNote(note) {\n      this.notes = this.notes.map(n => n.id === note.id ? note : n);\n    },\n    async fetchNotes() {\n      try {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\n        response.data.forEach(n => n.date = new Date().toLocaleString());\n        this.notes = response.data;\n      } catch (error) {\n        alert(error);\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useNotesStore","state","notes","id","title","body","date","sortOptions","value","text","searchQuery","selectedSort","getters","sortNotes","sort","n1","n2","localeCompare","searchNotes","filter","n","toLowerCase","includes","content","actions","addNote","note","push","deleteNote","editNote","map","fetchNotes","response","get","data","forEach","Date","toLocaleString","error","alert"],"sources":["/Users/boybutterfly1/Desktop/JS/notes/src/store/index.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport axios from 'axios'\n\nexport const useNotesStore = defineStore('notesStore', {\n  state: () => ({\n    notes: [\n      { id: 1, title: 'First note', body: 'This is the first note', date: '2021-01-01' }\n    ],\n    sortOptions: [\n      { value: 'title', text: 'Title' },\n      { value: 'body', text: 'Content' },\n      { value: 'date', text: 'Date' }\n    ],\n    searchQuery: '',\n    selectedSort: '',\n  }),\n  \n  getters: {\n    sortNotes() {\n      return [...this.notes].sort((n1, n2) => n1[this.selectedSort]?.localeCompare(n2[this.selectedSort]))\n    },\n    searchNotes() {\n      return sortNotes.filter(n => n.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || n.content.toLowerCase().includes(this.searchQuery.toLowerCase()))\n    }\n  },\n\n  actions: {\n   addNote(note){\n    this.notes.push(note)\n  },\n   deleteNote(note){\n    this.notes = this.notes.filter(n => n.id !== note.id)\n  },\n   editNote(note){\n    this.notes = this.notes.map(n => n.id === note.id ? note : n)\n  },\n  async fetchNotes() {\n    try {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/posts')\n      response.data.forEach(n => n.date = new Date().toLocaleString())\n      this.notes = response.data\n    } catch (error) {\n      alert(error)\n    }\n  },\n}\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAGF,WAAW,CAAC,YAAY,EAAE;EACrDG,KAAK,EAAEA,CAAA,MAAO;IACZC,KAAK,EAAE,CACL;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,IAAI,EAAE,wBAAwB;MAAEC,IAAI,EAAE;IAAa,CAAC,CACnF;IACDC,WAAW,EAAE,CACX;MAAEC,KAAK,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAQ,CAAC,EACjC;MAAED,KAAK,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAU,CAAC,EAClC;MAAED,KAAK,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAO,CAAC,CAChC;IACDC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,OAAO,CAAC,GAAG,IAAI,CAACX,KAAK,CAAC,CAACY,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAKD,EAAE,CAAC,IAAI,CAACJ,YAAY,CAAC,EAAEM,aAAa,CAACD,EAAE,CAAC,IAAI,CAACL,YAAY,CAAC,CAAC,CAAC;IACtG,CAAC;IACDO,WAAWA,CAAA,EAAG;MACZ,OAAOL,SAAS,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChB,KAAK,CAACiB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACZ,WAAW,CAACW,WAAW,CAAC,CAAC,CAAC,IAAID,CAAC,CAACG,OAAO,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACZ,WAAW,CAACW,WAAW,CAAC,CAAC,CAAC,CAAC;IAClK;EACF,CAAC;EAEDG,OAAO,EAAE;IACRC,OAAOA,CAACC,IAAI,EAAC;MACZ,IAAI,CAACxB,KAAK,CAACyB,IAAI,CAACD,IAAI,CAAC;IACvB,CAAC;IACAE,UAAUA,CAACF,IAAI,EAAC;MACf,IAAI,CAACxB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACiB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACjB,EAAE,KAAKuB,IAAI,CAACvB,EAAE,CAAC;IACvD,CAAC;IACA0B,QAAQA,CAACH,IAAI,EAAC;MACb,IAAI,CAACxB,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC4B,GAAG,CAACV,CAAC,IAAIA,CAAC,CAACjB,EAAE,KAAKuB,IAAI,CAACvB,EAAE,GAAGuB,IAAI,GAAGN,CAAC,CAAC;IAC/D,CAAC;IACD,MAAMW,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,4CAA4C,CAAC;QAC9ED,QAAQ,CAACE,IAAI,CAACC,OAAO,CAACf,CAAC,IAAIA,CAAC,CAACd,IAAI,GAAG,IAAI8B,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC;QAChE,IAAI,CAACnC,KAAK,GAAG8B,QAAQ,CAACE,IAAI;MAC5B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,KAAK,CAACD,KAAK,CAAC;MACd;IACF;EACF;AACA,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}