{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.note.id === $setup.id ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.notesStore.notes, note => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"span\", null, _toDisplayString(note.title), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["_ctx","note","id","$setup","_createElementBlock","_Fragment","key","_renderList","notesStore","notes","_createElementVNode","_toDisplayString","title"],"sources":["/Users/boybutterfly1/Desktop/JS/notes/src/pages/NoteDetails.vue"],"sourcesContent":["<script setup>\nimport { useNotesStore } from '@/store/index'\nimport { onMounted } from 'vue';\nimport { useRoute } from 'vue-router'\nimport { ref } from 'vue'\n\nconst notesStore = useNotesStore()\nconst route = useRoute()\nconst id = ref(route.params.id)\n\n</script>\n\n<template>\n  <div\n    v-for=\"note in notesStore.notes\"\n    v-if=\"note.id === id\"\n  >\n    <span>{{ note.title }}</span>\n  </div>\n</template>\n\n<style scoped>\n\n</style>\n"],"mappings":";;SAeUA,IAAA,CAAAC,IAAI,CAACC,EAAE,KAAKC,MAAA,CAAAD,EAAE,I,kBAFtBE,mBAAA,CAKMC,SAAA;IAAAC,GAAA;EAAA,GAAAC,WAAA,CAJWJ,MAAA,CAAAK,UAAU,CAACC,KAAK,EAAxBR,IAAI;yBADbG,mBAAA,CAKM,cADJM,mBAAA,CAA6B,cAAAC,gBAAA,CAApBV,IAAI,CAACW,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}